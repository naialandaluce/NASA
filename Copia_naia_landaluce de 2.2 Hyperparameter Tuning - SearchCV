{"cells":[{"cell_type":"markdown","metadata":{"id":"eRfmgAGXKAfS"},"source":["# Hyperparameter tuning\n","\n","We are going to traing models using [this](https://www.kaggle.com/datasets/uciml/red-wine-quality-cortez-et-al-2009) dataset. The goal of this dataset is to predict the quality of wine based on several features/metrics:\n","\n","Input Variables (based on physicochemical tests):\n","*   Fixed acidity\n","*   Volatile acidity\n","*   Citric acid\n","*   Residual sugar\n","*   Chlorides\n","*   Free sulfur dioxide\n","*   Total sulfur dioxide\n","*   Density\n","*   pH\n","*   Sulphates\n","*   Alcohol\n","\n","Output Variable (based on sensory data):\n","*   Quality (score between 0 and 10)\n","\n","\n","The code and idea has been extracted from this [post](https://www.kdnuggets.com/2022/10/hyperparameter-tuning-grid-search-random-search-python.html).\n"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":19,"status":"ok","timestamp":1741372274131,"user":{"displayName":"Naia Landaluce Marquínez","userId":"06454318205909879323"},"user_tz":-60},"id":"sJ1uH58u4Am2"},"outputs":[],"source":["import pandas as pd\n","from pydrive2.auth import GoogleAuth\n","from pydrive2.drive import GoogleDrive\n","from google.colab import auth\n","from oauth2client.client import GoogleCredentials\n"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22059,"status":"ok","timestamp":1741372330010,"user":{"displayName":"Naia Landaluce Marquínez","userId":"06454318205909879323"},"user_tz":-60},"id":"dVCUx9hW4-IS","outputId":"19167cfa-591e-41f5-e283-b75fdac52c01"},"outputs":[{"name":"stdout","output_type":"stream","text":["      fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n","0               7.4             0.700         0.00             1.9      0.076   \n","1               7.8             0.880         0.00             2.6      0.098   \n","2               7.8             0.760         0.04             2.3      0.092   \n","3              11.2             0.280         0.56             1.9      0.075   \n","4               7.4             0.700         0.00             1.9      0.076   \n","...             ...               ...          ...             ...        ...   \n","1594            6.2             0.600         0.08             2.0      0.090   \n","1595            5.9             0.550         0.10             2.2      0.062   \n","1596            6.3             0.510         0.13             2.3      0.076   \n","1597            5.9             0.645         0.12             2.0      0.075   \n","1598            6.0             0.310         0.47             3.6      0.067   \n","\n","      free sulfur dioxide  total sulfur dioxide  density    pH  sulphates  \\\n","0                    11.0                  34.0  0.99780  3.51       0.56   \n","1                    25.0                  67.0  0.99680  3.20       0.68   \n","2                    15.0                  54.0  0.99700  3.26       0.65   \n","3                    17.0                  60.0  0.99800  3.16       0.58   \n","4                    11.0                  34.0  0.99780  3.51       0.56   \n","...                   ...                   ...      ...   ...        ...   \n","1594                 32.0                  44.0  0.99490  3.45       0.58   \n","1595                 39.0                  51.0  0.99512  3.52       0.76   \n","1596                 29.0                  40.0  0.99574  3.42       0.75   \n","1597                 32.0                  44.0  0.99547  3.57       0.71   \n","1598                 18.0                  42.0  0.99549  3.39       0.66   \n","\n","      alcohol  \n","0         9.4  \n","1         9.8  \n","2         9.8  \n","3         9.8  \n","4         9.4  \n","...       ...  \n","1594     10.5  \n","1595     11.2  \n","1596     11.0  \n","1597     10.2  \n","1598     11.0  \n","\n","[1599 rows x 11 columns]\n","      target\n","0          0\n","1          0\n","2          0\n","3          1\n","4          0\n","...      ...\n","1594       0\n","1595       1\n","1596       1\n","1597       0\n","1598       1\n","\n","[1599 rows x 1 columns]\n"]}],"source":["\n","auth.authenticate_user()\n","gauth = GoogleAuth()\n","gauth.credentials = GoogleCredentials.get_application_default()\n","drive = GoogleDrive(gauth)\n","\n","#Google Drive ID for public sharing of the dataset\n","file_id = \"1Ck8dPieQkF2K9T6NI-vaxPe3drYEA1CZ\"\n","file = drive.CreateFile({'id': file_id})\n","file.GetContentFile('winequality-red.csv')\n","\n","#Reading the csv and loading it into a pandas dataframe.\n","df = pd.read_csv('winequality-red.csv')\n","df.head()\n","\n","import numpy as np\n","\n","#We transform the problem from a regression to a binary: good \u003e 5, bad \u003c= 5.\n","df['target'] = np.where(df['quality']\u003e5, 1, 0)\n","\n","#We delete the quality columns since we have already used it for the definition of the target/y.\n","df2 = df.drop(['quality'],axis=1)\n","#We remove the target from the dataframe. We do not want data leakage!!\n","X = df2.drop(['target'],axis=1)\n","#We only keep the label.\n","y = df2[['target']]\n","\n","print(X)\n","print(y)"]},{"cell_type":"markdown","metadata":{"id":"KY121NMRRvo2"},"source":["Once the dataset has been processed, we are going to choose a classifier and create a python dictionary with the different possible hyperparameter values.  "]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":1646,"status":"ok","timestamp":1741372360539,"user":{"displayName":"Naia Landaluce Marquínez","userId":"06454318205909879323"},"user_tz":-60},"id":"DK1UStBF5lSV"},"outputs":[],"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","rf = RandomForestClassifier()"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1741372363306,"user":{"displayName":"Naia Landaluce Marquínez","userId":"06454318205909879323"},"user_tz":-60},"id":"S9fgUC3A7GsH"},"outputs":[],"source":["grid_space={'max_depth':[3,5,10,None],\n","              'n_estimators':[10,100,200],\n","              'max_features':[1,3,5,7],\n","              'min_samples_leaf':[1,2,3],\n","              'min_samples_split':[2,3]\n","           }"]},{"cell_type":"markdown","metadata":{"id":"5N_MQQ_XTq11"},"source":["## GridSearchCV\n","\n","Now, let's search for the best combination of hyperameters withing the parameter grid.\n","\n","Parameters to take into account:\n","*   ***cv***: number of cross-validation folds used for the hyperparameter search.\n","*   ***scoring***: which metric we are aiming to maximize. [Here](https://scikit-learn.org/stable/modules/model_evaluation.html#scoring-parameter) the list of all possible metrics.\n","*   ***refit***: this way, once the best parameters have been found, a model with the whole dataset is trained with the correct parameters. Therefore, ***best_estimator_*** is avaiable.\n","*   ***verbose***: information messages are shown.\n","\n"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":302750,"status":"ok","timestamp":1741372676452,"user":{"displayName":"Naia Landaluce Marquínez","userId":"06454318205909879323"},"user_tz":-60},"id":"GmjNFMjp7J9F"},"outputs":[],"source":["from sklearn.model_selection import GridSearchCV\n","\n","grid = GridSearchCV(rf,param_grid=grid_space,cv=3,scoring='accuracy')\n","model_grid = grid.fit(X,y.values.ravel())"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1741372852354,"user":{"displayName":"Naia Landaluce Marquínez","userId":"06454318205909879323"},"user_tz":-60},"id":"Z_9Wy1sl7L92","outputId":"d267341b-e3cd-438f-a99c-834beabe4dae"},"outputs":[{"name":"stdout","output_type":"stream","text":["Best hyperparameters according to GridSearchCV are: {'max_depth': 3, 'max_features': 3, 'min_samples_leaf': 3, 'min_samples_split': 3, 'n_estimators': 100}\n","Best score (in this case accuracy) according to GridSearchCV is: 0.7360850531582238\n","The best estimator can be accessed using best_estimator_ :RandomForestClassifier(max_depth=3, max_features=3, min_samples_leaf=3,\n","                       min_samples_split=3)\n"]}],"source":["print(\"Best hyperparameters according to GridSearchCV are: \"+str(model_grid.best_params_))\n","print(\"Best score (in this case accuracy) according to GridSearchCV is: \"+str(model_grid.best_score_))\n","print(\"The best estimator can be accessed using best_estimator_ :\" + str(model_grid.best_estimator_))"]},{"cell_type":"markdown","metadata":{"id":"pD87AE_qFbdy"},"source":["## Visualizing grid results using a heatmap\n","\n","In order to facilitate its visualization, we are going to focus in two hyperparameters: number of estimators and maximum number of features."]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":499},"executionInfo":{"elapsed":17692,"status":"ok","timestamp":1741372954687,"user":{"displayName":"Naia Landaluce Marquínez","userId":"06454318205909879323"},"user_tz":-60},"id":"AUnZBd2gFqJx","outputId":"2a04be3b-259e-4e72-af91-97664dd7b0e2"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 800x600 with 2 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["grid_space={'n_estimators':[10,100,200],'max_features':[1,3,5,7]}\n","\n","grid = GridSearchCV(rf,param_grid=grid_space,cv=3,scoring='accuracy')\n","model_grid = grid.fit(X,y.values.ravel())\n","\n","#Extracted from https://pieriantraining.com/gridsearchcv-with-scikit-learn-and-python/\n","import matplotlib.pyplot as plt\n","# Visualize grid search results using a heatmap\n","mean_scores = model_grid.cv_results_['mean_test_score']\n","mean_scores = np.array(mean_scores).reshape(len(grid_space['n_estimators']), len(grid_space['max_features']))\n","\n","plt.figure(figsize=(8, 6))\n","plt.imshow(mean_scores, interpolation='nearest', cmap='viridis')\n","plt.title('Grid Search Mean Test Scores', fontsize=16)\n","plt.xlabel('Max Features')\n","plt.ylabel('Number estimators')\n","plt.xticks(np.arange(len(grid_space['max_features'])), grid_space['max_features'])\n","plt.yticks(np.arange(len(grid_space['n_estimators'])), grid_space['n_estimators'])\n","plt.colorbar(label='Mean Test Score')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"FQzW206WdX_p"},"source":["## RandomSearchCV\n","\n","For large data sets, it is impossible to try every combination of models and parameters.\n","So instead we use heuristics, which do not guarantee the best model but tend to work well in practice."]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1741373525167,"user":{"displayName":"Naia Landaluce Marquínez","userId":"06454318205909879323"},"user_tz":-60},"id":"obVh9yvO7Qtn"},"outputs":[],"source":["from scipy.stats import randint\n","\n","rs_space={'max_depth':list(np.arange(10, 100, step=10)) + [None],\n","              'n_estimators':np.arange(10, 500, step=50),\n","              'max_features':randint(1,7),\n","              'criterion':['gini','entropy'],\n","              'min_samples_leaf':randint(1,4),\n","              'min_samples_split':np.arange(2, 10, step=2)\n","         }"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"PsJtehIS7TAl"},"outputs":[],"source":["from sklearn.model_selection import RandomizedSearchCV\n","\n","rf = RandomForestClassifier()\n","rf_random = RandomizedSearchCV(rf, rs_space, n_iter=500, scoring='accuracy', n_jobs=-1, cv=3)\n","model_random = rf_random.fit(X,y.values.ravel())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"8hUYMut67W5f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Best hyperparameters are: {'criterion': 'gini', 'max_depth': 10, 'max_features': 6, 'min_samples_leaf': 3, 'min_samples_split': 4, 'n_estimators': 360}\n","Best score is: 0.7335834896810507\n"]}],"source":["print('Best hyperparameters are: '+str(model_random.best_params_))\n","print('Best score is: '+str(model_random.best_score_))"]},{"cell_type":"markdown","metadata":{"id":"KLFtBY95giI9"},"source":["**Exercise 1:** Create an ensemble learning model where both the hyperparameters of the ensemble method and the hyperparameters of the individual models within it are optimized."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"NeiK1OVtHjFt"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:1408: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]},{"name":"stdout","output_type":"stream","text":["Best hyperparameters: {'estimator__max_depth': 5, 'estimator__min_samples_split': 6, 'learning_rate': 1, 'n_estimators': 50}\n","Test set score: 0.7958333333333333\n"]}],"source":["from sklearn.model_selection import GridSearchCV\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.datasets import make_classification\n","from sklearn.model_selection import train_test_split\n","\n","# Split dataset into training and testing\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n","\n","# Create a Decision Tree Classifier model\n","decision_tree = DecisionTreeClassifier(random_state=42)\n","\n","# Create an AdaBoostClassifier with Decision Tree as the base estimator\n","ada_boost = AdaBoostClassifier(estimator=decision_tree)\n","\n","# Define a grid of hyperparameters to search (for both AdaBoost and Decision Tree)\n","param_grid = {\n","    'estimator__max_depth': [1, 2, 3, 4, 5],  # Decision Tree hyperparameter\n","    'estimator__min_samples_split': [2, 4, 6],  # Decision Tree hyperparameter\n","    'n_estimators': [50, 100, 200],  # AdaBoost hyperparameter\n","    'learning_rate': [0.01, 0.1, 1]  # AdaBoost hyperparameter\n","}\n","\n","# Setup the grid search\n","grid_search = GridSearchCV(estimator=ada_boost, param_grid=param_grid, cv=5, n_jobs=-1)\n","\n","# Perform the grid search on the training data\n","grid_search.fit(X_train, y_train)\n","\n","# Best hyperparameter combination\n","print(\"Best hyperparameters:\", grid_search.best_params_)\n","\n","# Evaluate on the test set\n","test_score = grid_search.score(X_test, y_test)\n","print(\"Test set score:\", test_score)"]},{"cell_type":"markdown","metadata":{"id":"K-J20OcrE0iC"},"source":["**Exercise 2:** Perform a hyperparameter tuning of a SVC and RandomForest with Optuna with the previous dataset. Example: https://github.com/optuna/optuna-examples/blob/main/sklearn/sklearn_additional_args.py"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5455,"status":"ok","timestamp":1741173949465,"user":{"displayName":"Aritz Bilbao Jayo","userId":"07337047788957255346"},"user_tz":-60},"id":"QGKYPjz_EwwC","outputId":"c96b9f29-2bc0-459d-c322-665597ad6f2b"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting optuna\n","  Downloading optuna-4.2.1-py3-none-any.whl.metadata (17 kB)\n","Collecting alembic\u003e=1.5.0 (from optuna)\n","  Downloading alembic-1.15.1-py3-none-any.whl.metadata (7.2 kB)\n","Collecting colorlog (from optuna)\n","  Downloading colorlog-6.9.0-py3-none-any.whl.metadata (10 kB)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from optuna) (1.26.4)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.11/dist-packages (from optuna) (24.2)\n","Requirement already satisfied: sqlalchemy\u003e=1.4.2 in /usr/local/lib/python3.11/dist-packages (from optuna) (2.0.38)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from optuna) (4.67.1)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.11/dist-packages (from optuna) (6.0.2)\n","Collecting Mako (from alembic\u003e=1.5.0-\u003eoptuna)\n","  Downloading Mako-1.3.9-py3-none-any.whl.metadata (2.9 kB)\n","Requirement already satisfied: typing-extensions\u003e=4.12 in /usr/local/lib/python3.11/dist-packages (from alembic\u003e=1.5.0-\u003eoptuna) (4.12.2)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.11/dist-packages (from sqlalchemy\u003e=1.4.2-\u003eoptuna) (3.1.1)\n","Requirement already satisfied: MarkupSafe\u003e=0.9.2 in /usr/local/lib/python3.11/dist-packages (from Mako-\u003ealembic\u003e=1.5.0-\u003eoptuna) (3.0.2)\n","Downloading optuna-4.2.1-py3-none-any.whl (383 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m383.6/383.6 kB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading alembic-1.15.1-py3-none-any.whl (231 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m231.8/231.8 kB\u001b[0m \u001b[31m15.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading colorlog-6.9.0-py3-none-any.whl (11 kB)\n","Downloading Mako-1.3.9-py3-none-any.whl (78 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m78.5/78.5 kB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: Mako, colorlog, alembic, optuna\n","Successfully installed Mako-1.3.9 alembic-1.15.1 colorlog-6.9.0 optuna-4.2.1\n"]}],"source":["!pip install optuna"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":74329,"status":"ok","timestamp":1741174035165,"user":{"displayName":"Aritz Bilbao Jayo","userId":"07337047788957255346"},"user_tz":-60},"id":"pCcJd5ZxM4Se","outputId":"4ee38c83-f09a-4e94-967f-8b193e3cab74"},"outputs":[{"name":"stderr","output_type":"stream","text":["[I 2025-03-05 11:25:25,408] A new study created in memory with name: no-name-88c999bd-3cde-472b-9818-ad6d6c8ec137\n","[I 2025-03-05 11:25:27,653] Trial 0 finished with value: 0.7810545129579981 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 9, 'n_estimators': 97}. Best is trial 0 with value: 0.7810545129579981.\n","[I 2025-03-05 11:25:29,017] Trial 1 finished with value: 0.774798927613941 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 10, 'n_estimators': 69}. Best is trial 0 with value: 0.7810545129579981.\n","[I 2025-03-05 11:25:29,528] Trial 2 finished with value: 0.6711349419124218 and parameters: {'classifier': 'SVC', 'svc_c': 100914570.29358529}. Best is trial 0 with value: 0.7810545129579981.\n","[I 2025-03-05 11:25:30,159] Trial 3 finished with value: 0.6711349419124218 and parameters: {'classifier': 'SVC', 'svc_c': 31059292.87192098}. Best is trial 0 with value: 0.7810545129579981.\n","[I 2025-03-05 11:25:30,706] Trial 4 finished with value: 0.5254691689008043 and parameters: {'classifier': 'SVC', 'svc_c': 0.001059668956790297}. Best is trial 0 with value: 0.7810545129579981.\n","[I 2025-03-05 11:25:32,214] Trial 5 finished with value: 0.7864164432529045 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 10, 'n_estimators': 61}. Best is trial 5 with value: 0.7864164432529045.\n","[I 2025-03-05 11:25:34,605] Trial 6 finished with value: 0.7890974084003575 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 97}. Best is trial 6 with value: 0.7890974084003575.\n","[I 2025-03-05 11:25:36,036] Trial 7 finished with value: 0.7873100983020554 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 23, 'n_estimators': 96}. Best is trial 6 with value: 0.7890974084003575.\n","[I 2025-03-05 11:25:37,221] Trial 8 finished with value: 0.7801608579088471 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 8, 'n_estimators': 48}. Best is trial 6 with value: 0.7890974084003575.\n","[I 2025-03-05 11:25:37,752] Trial 9 finished with value: 0.5254691689008043 and parameters: {'classifier': 'SVC', 'svc_c': 9.685938793956244e-10}. Best is trial 6 with value: 0.7890974084003575.\n","[I 2025-03-05 11:25:38,227] Trial 10 finished with value: 0.738159070598749 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 2, 'n_estimators': 14}. Best is trial 6 with value: 0.7890974084003575.\n","[I 2025-03-05 11:25:40,390] Trial 11 finished with value: 0.7917783735478104 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 31, 'n_estimators': 98}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:42,066] Trial 12 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 30, 'n_estimators': 100}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:43,034] Trial 13 finished with value: 0.7792672028596961 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 19, 'n_estimators': 82}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:44,287] Trial 14 finished with value: 0.7819481680071493 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 78}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:44,751] Trial 15 finished with value: 0.7488829311885613 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 3, 'n_estimators': 36}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:45,940] Trial 16 finished with value: 0.7864164432529043 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 30, 'n_estimators': 85}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:46,611] Trial 17 finished with value: 0.7837354781054513 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 15, 'n_estimators': 48}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:46,862] Trial 18 finished with value: 0.6738159070598749 and parameters: {'classifier': 'SVC', 'svc_c': 7.162748163659587}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:47,952] Trial 19 finished with value: 0.7587131367292225 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 5, 'n_estimators': 88}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:49,047] Trial 20 finished with value: 0.7703306523681858 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 14, 'n_estimators': 71}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:51,309] Trial 21 finished with value: 0.7846291331546023 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 24, 'n_estimators': 99}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:52,873] Trial 22 finished with value: 0.7792672028596962 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 22, 'n_estimators': 91}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:53,599] Trial 23 finished with value: 0.7864164432529043 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 32, 'n_estimators': 90}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:54,168] Trial 24 finished with value: 0.7890974084003575 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 13, 'n_estimators': 76}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:54,752] Trial 25 finished with value: 0.7890974084003575 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 13, 'n_estimators': 74}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:54,910] Trial 26 finished with value: 0.5254691689008043 and parameters: {'classifier': 'SVC', 'svc_c': 4.230434770002666e-09}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:55,346] Trial 27 finished with value: 0.7685433422698837 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 6, 'n_estimators': 64}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:55,943] Trial 28 finished with value: 0.7783735478105451 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 13, 'n_estimators': 79}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:56,629] Trial 29 finished with value: 0.7864164432529043 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 18, 'n_estimators': 89}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:57,077] Trial 30 finished with value: 0.7792672028596961 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 12, 'n_estimators': 58}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:57,530] Trial 31 finished with value: 0.7756925826630919 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 6, 'n_estimators': 69}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:58,115] Trial 32 finished with value: 0.7801608579088471 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 12, 'n_estimators': 76}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:58,825] Trial 33 finished with value: 0.7783735478105451 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 23, 'n_estimators': 93}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:59,185] Trial 34 finished with value: 0.7587131367292225 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 4, 'n_estimators': 52}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:59,372] Trial 35 finished with value: 0.6738159070598749 and parameters: {'classifier': 'SVC', 'svc_c': 97.43129861742608}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:25:59,940] Trial 36 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 16, 'n_estimators': 74}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:26:00,108] Trial 37 finished with value: 0.5254691689008043 and parameters: {'classifier': 'SVC', 'svc_c': 0.0001433980693323795}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:26:00,419] Trial 38 finished with value: 0.7819481680071493 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 9, 'n_estimators': 39}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:26:01,052] Trial 39 finished with value: 0.7864164432529043 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 19, 'n_estimators': 84}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:26:01,257] Trial 40 finished with value: 0.6711349419124218 and parameters: {'classifier': 'SVC', 'svc_c': 4856.448210496839}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:26:01,960] Trial 41 finished with value: 0.7873100983020554 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 25, 'n_estimators': 95}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:26:02,678] Trial 42 finished with value: 0.7873100983020554 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 26, 'n_estimators': 97}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:26:03,625] Trial 43 finished with value: 0.7801608579088471 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 11, 'n_estimators': 100}. Best is trial 11 with value: 0.7917783735478104.\n","[I 2025-03-05 11:26:04,509] Trial 44 finished with value: 0.7926720285969616 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 22, 'n_estimators': 65}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:05,367] Trial 45 finished with value: 0.7765862377122431 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 21, 'n_estimators': 66}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:06,054] Trial 46 finished with value: 0.7792672028596961 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 9, 'n_estimators': 60}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:06,615] Trial 47 finished with value: 0.7676496872207328 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 15, 'n_estimators': 74}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:07,115] Trial 48 finished with value: 0.7810545129579981 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 29, 'n_estimators': 64}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:07,713] Trial 49 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 20, 'n_estimators': 81}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:08,141] Trial 50 finished with value: 0.7810545129579981 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 10, 'n_estimators': 54}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:08,258] Trial 51 finished with value: 0.7578194816800714 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 26, 'n_estimators': 10}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:08,896] Trial 52 finished with value: 0.7917783735478104 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 86}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:09,553] Trial 53 finished with value: 0.7828418230563002 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 85}. Best is trial 44 with value: 0.7926720285969616.\n","[I 2025-03-05 11:26:10,073] Trial 54 finished with value: 0.7980339588918678 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 13, 'n_estimators': 69}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:10,471] Trial 55 finished with value: 0.7462019660411081 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 2, 'n_estimators': 68}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:10,627] Trial 56 finished with value: 0.5254691689008043 and parameters: {'classifier': 'SVC', 'svc_c': 4.587594340744793e-05}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:11,289] Trial 57 finished with value: 0.7908847184986595 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 16, 'n_estimators': 87}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:11,982] Trial 58 finished with value: 0.7774798927613941 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 95}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:12,646] Trial 59 finished with value: 0.7882037533512064 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 20, 'n_estimators': 87}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:12,853] Trial 60 finished with value: 0.7864164432529043 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 28, 'n_estimators': 22}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:13,546] Trial 61 finished with value: 0.7783735478105451 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 11, 'n_estimators': 93}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:14,164] Trial 62 finished with value: 0.7810545129579981 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 14, 'n_estimators': 82}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:14,717] Trial 63 finished with value: 0.7837354781054513 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 16, 'n_estimators': 71}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:15,308] Trial 64 finished with value: 0.7882037533512064 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 22, 'n_estimators': 78}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:16,032] Trial 65 finished with value: 0.7819481680071493 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 14, 'n_estimators': 91}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:17,066] Trial 66 finished with value: 0.7846291331546023 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 32, 'n_estimators': 87}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:18,037] Trial 67 finished with value: 0.7765862377122431 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 18, 'n_estimators': 81}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:18,374] Trial 68 finished with value: 0.6711349419124218 and parameters: {'classifier': 'SVC', 'svc_c': 146072.1895919368}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:19,405] Trial 69 finished with value: 0.7774798927613941 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 8, 'n_estimators': 100}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:20,120] Trial 70 finished with value: 0.7890974084003575 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 13, 'n_estimators': 96}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:20,678] Trial 71 finished with value: 0.7890974084003575 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 12, 'n_estimators': 74}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:21,256] Trial 72 finished with value: 0.7846291331546023 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 15, 'n_estimators': 77}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:21,757] Trial 73 finished with value: 0.7864164432529043 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 13, 'n_estimators': 62}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:22,298] Trial 74 finished with value: 0.7792672028596962 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 10, 'n_estimators': 72}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:22,825] Trial 75 finished with value: 0.7828418230563002 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 23, 'n_estimators': 68}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:23,496] Trial 76 finished with value: 0.7935656836461126 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 18, 'n_estimators': 91}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:24,199] Trial 77 finished with value: 0.7917783735478104 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 19, 'n_estimators': 93}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:24,916] Trial 78 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 19, 'n_estimators': 93}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:25,126] Trial 79 finished with value: 0.6711349419124218 and parameters: {'classifier': 'SVC', 'svc_c': 6844755646.089116}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:26,030] Trial 80 finished with value: 0.7801608579088471 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 25, 'n_estimators': 89}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:26,753] Trial 81 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 16, 'n_estimators': 97}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:27,406] Trial 82 finished with value: 0.7837354781054513 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 21, 'n_estimators': 85}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:28,113] Trial 83 finished with value: 0.7864164432529043 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 18, 'n_estimators': 93}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:28,802] Trial 84 finished with value: 0.7971403038427166 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 20, 'n_estimators': 91}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:29,593] Trial 85 finished with value: 0.7882037533512064 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 27, 'n_estimators': 90}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:30,797] Trial 86 finished with value: 0.7837354781054513 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 20, 'n_estimators': 99}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:31,897] Trial 87 finished with value: 0.7810545129579981 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 23, 'n_estimators': 92}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:32,727] Trial 88 finished with value: 0.7882037533512064 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 87}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:33,117] Trial 89 finished with value: 0.7810545129579981 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 21, 'n_estimators': 49}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:33,745] Trial 90 finished with value: 0.7846291331546023 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 24, 'n_estimators': 83}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:34,468] Trial 91 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 19, 'n_estimators': 96}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:34,905] Trial 92 finished with value: 0.7533512064343163 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 3, 'n_estimators': 80}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:35,581] Trial 93 finished with value: 0.7864164432529043 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 15, 'n_estimators': 89}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:36,266] Trial 94 finished with value: 0.7873100983020554 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 11, 'n_estimators': 94}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:36,984] Trial 95 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 14, 'n_estimators': 98}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:37,641] Trial 96 finished with value: 0.7792672028596962 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 30, 'n_estimators': 86}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:37,803] Trial 97 finished with value: 0.5254691689008043 and parameters: {'classifier': 'SVC', 'svc_c': 0.023063121345352506}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:38,485] Trial 98 finished with value: 0.7935656836461126 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 90}. Best is trial 54 with value: 0.7980339588918678.\n","[I 2025-03-05 11:26:38,929] Trial 99 finished with value: 0.7873100983020554 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 18, 'n_estimators': 58}. Best is trial 54 with value: 0.7980339588918678.\n"]},{"name":"stdout","output_type":"stream","text":["Best parameters: {'classifier': 'RandomForest', 'rf_max_depth': 13, 'n_estimators': 69}\n"]}],"source":["import optuna\n","\n","import sklearn.datasets\n","import sklearn.ensemble\n","import sklearn.model_selection\n","import sklearn.svm\n","\n","\n","def objective(trial):\n","\n","    classifier_name = trial.suggest_categorical(\"classifier\", [\"SVC\", \"RandomForest\"])\n","    if classifier_name == \"SVC\":\n","        svc_c = trial.suggest_float(\"svc_c\", 1e-10, 1e10, log=True)\n","        classifier_obj = sklearn.svm.SVC(C=svc_c, gamma=\"auto\")\n","    else:\n","        rf_max_depth = trial.suggest_int(\"rf_max_depth\", 2, 32, log=True)\n","        rf_n_estimators = trial.suggest_int(\"n_estimators\", 10, 100)\n","        classifier_obj = sklearn.ensemble.RandomForestClassifier(\n","            max_depth=rf_max_depth, n_estimators=rf_n_estimators\n","        )\n","\n","    score = sklearn.model_selection.cross_val_score(classifier_obj, X_train, y_train, n_jobs=-1, cv=3)\n","    accuracy = score.mean()\n","    return accuracy\n","\n","\n","\n","study = optuna.create_study(direction=\"maximize\")\n","study.optimize(objective, n_trials=100)\n","\n","\n","# Retrieve the best parameters\n","best_params = study.best_params\n","print(\"Best parameters:\", best_params)"]},{"cell_type":"markdown","metadata":{"id":"b_oxhnXZif66"},"source":["Exercise 3: # Retrain your model with the best parameters."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QL5-a02GikSL"},"outputs":[],"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","# Retrain your model with the best parameters\n","best_model = RandomForestClassifier(max_depth= best_params['rf_max_depth'], n_estimators=best_params['n_estimators'])\n","best_model.fit(X_train, y_train)\n","\n","# Evaluate the best model on the test dataset\n","test_accuracy = best_model.score(X_test, y_test)\n","print(\"Test accuracy:\", test_accuracy)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AnQ6RZHNEfb8"},"outputs":[],"source":["# Split dataset into training and testing\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":39681,"status":"ok","timestamp":1741174499747,"user":{"displayName":"Aritz Bilbao Jayo","userId":"07337047788957255346"},"user_tz":-60},"id":"6tuY97cdElYj","outputId":"177a604c-7939-404b-91c4-2054638481e4"},"outputs":[{"name":"stderr","output_type":"stream","text":["[I 2025-03-05 11:33:43,887] A new study created in memory with name: no-name-41ef2a28-4326-439c-a25f-bf09e1e88dc5\n","[I 2025-03-05 11:33:44,782] Trial 0 finished with value: 0.77390527256479 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 7, 'n_estimators': 77}. Best is trial 0 with value: 0.77390527256479.\n","[I 2025-03-05 11:33:44,919] Trial 1 finished with value: 0.7551385165326184 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 3, 'n_estimators': 12}. Best is trial 0 with value: 0.77390527256479.\n","[I 2025-03-05 11:33:45,237] Trial 2 finished with value: 0.6702412868632708 and parameters: {'classifier': 'SVC', 'svc_c': 1846761.1294263052}. Best is trial 0 with value: 0.77390527256479.\n","[I 2025-03-05 11:33:45,415] Trial 3 finished with value: 0.6702412868632708 and parameters: {'classifier': 'SVC', 'svc_c': 5465980306.788197}. Best is trial 0 with value: 0.77390527256479.\n","[I 2025-03-05 11:33:45,559] Trial 4 finished with value: 0.5254691689008043 and parameters: {'classifier': 'SVC', 'svc_c': 0.019164348626687745}. Best is trial 0 with value: 0.77390527256479.\n","[I 2025-03-05 11:33:46,130] Trial 5 finished with value: 0.7587131367292225 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 3, 'n_estimators': 92}. Best is trial 0 with value: 0.77390527256479.\n","[I 2025-03-05 11:33:46,445] Trial 6 finished with value: 0.7837354781054513 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 27, 'n_estimators': 34}. Best is trial 6 with value: 0.7837354781054513.\n","[I 2025-03-05 11:33:46,929] Trial 7 finished with value: 0.7765862377122431 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 6, 'n_estimators': 66}. Best is trial 6 with value: 0.7837354781054513.\n","[I 2025-03-05 11:33:47,262] Trial 8 finished with value: 0.7515638963360143 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 3, 'n_estimators': 51}. Best is trial 6 with value: 0.7837354781054513.\n","[I 2025-03-05 11:33:47,487] Trial 9 finished with value: 0.7828418230563002 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 19, 'n_estimators': 25}. Best is trial 6 with value: 0.7837354781054513.\n","[I 2025-03-05 11:33:47,542] Trial 10 pruned. \n","[I 2025-03-05 11:33:47,644] Trial 11 pruned. \n","[I 2025-03-05 11:33:48,009] Trial 12 finished with value: 0.7828418230563002 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 31, 'n_estimators': 38}. Best is trial 6 with value: 0.7837354781054513.\n","[I 2025-03-05 11:33:48,085] Trial 13 pruned. \n","[I 2025-03-05 11:33:48,472] Trial 14 finished with value: 0.7846291331546024 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 15, 'n_estimators': 41}. Best is trial 14 with value: 0.7846291331546024.\n","[I 2025-03-05 11:33:48,861] Trial 15 finished with value: 0.7792672028596961 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 13, 'n_estimators': 44}. Best is trial 14 with value: 0.7846291331546024.\n","[I 2025-03-05 11:33:49,370] Trial 16 finished with value: 0.7989276139410187 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 10, 'n_estimators': 58}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:49,571] Trial 17 pruned. \n","[I 2025-03-05 11:33:49,630] Trial 18 pruned. \n","[I 2025-03-05 11:33:50,134] Trial 19 finished with value: 0.7792672028596961 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 10, 'n_estimators': 59}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:50,351] Trial 20 pruned. \n","[I 2025-03-05 11:33:50,701] Trial 21 finished with value: 0.7917783735478104 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 19, 'n_estimators': 38}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:51,141] Trial 22 finished with value: 0.7899910634495084 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 20, 'n_estimators': 49}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:51,624] Trial 23 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 20, 'n_estimators': 54}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:51,781] Trial 24 pruned. \n","[I 2025-03-05 11:33:52,303] Trial 25 finished with value: 0.7846291331546024 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 11, 'n_estimators': 59}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:52,359] Trial 26 pruned. \n","[I 2025-03-05 11:33:52,512] Trial 27 pruned. \n","[I 2025-03-05 11:33:52,651] Trial 28 pruned. \n","[I 2025-03-05 11:33:52,766] Trial 29 pruned. \n","[I 2025-03-05 11:33:53,310] Trial 30 finished with value: 0.7890974084003575 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 14, 'n_estimators': 61}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:53,868] Trial 31 finished with value: 0.7944593386952636 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 15, 'n_estimators': 65}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:54,595] Trial 32 finished with value: 0.7935656836461126 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 84}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:55,436] Trial 33 finished with value: 0.7837354781054513 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 11, 'n_estimators': 89}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:56,536] Trial 34 finished with value: 0.7890974084003575 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 12, 'n_estimators': 86}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:56,645] Trial 35 pruned. \n","[I 2025-03-05 11:33:57,014] Trial 36 pruned. \n","[I 2025-03-05 11:33:57,109] Trial 37 pruned. \n","[I 2025-03-05 11:33:57,526] Trial 38 pruned. \n","[I 2025-03-05 11:33:58,173] Trial 39 finished with value: 0.7944593386952636 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 24, 'n_estimators': 73}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:58,394] Trial 40 pruned. \n","[I 2025-03-05 11:33:58,974] Trial 41 finished with value: 0.7908847184986595 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 25, 'n_estimators': 66}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:33:59,203] Trial 42 pruned. \n","[I 2025-03-05 11:33:59,882] Trial 43 finished with value: 0.7890974084003575 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 23, 'n_estimators': 77}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:34:00,430] Trial 44 finished with value: 0.7846291331546024 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 17, 'n_estimators': 63}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:34:00,677] Trial 45 pruned. \n","[I 2025-03-05 11:34:00,747] Trial 46 pruned. \n","[I 2025-03-05 11:34:01,347] Trial 47 finished with value: 0.7846291331546024 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 15, 'n_estimators': 69}. Best is trial 16 with value: 0.7989276139410187.\n","[I 2025-03-05 11:34:01,513] Trial 48 pruned. \n","[I 2025-03-05 11:34:02,217] Trial 49 finished with value: 0.7998212689901698 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 29, 'n_estimators': 81}. Best is trial 49 with value: 0.7998212689901698.\n","[I 2025-03-05 11:34:03,005] Trial 50 finished with value: 0.7935656836461126 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 31, 'n_estimators': 91}. Best is trial 49 with value: 0.7998212689901698.\n","[I 2025-03-05 11:34:03,698] Trial 51 finished with value: 0.7917783735478104 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 29, 'n_estimators': 80}. Best is trial 49 with value: 0.7998212689901698.\n","[I 2025-03-05 11:34:03,976] Trial 52 pruned. \n","[I 2025-03-05 11:34:04,782] Trial 53 finished with value: 0.7944593386952636 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 24, 'n_estimators': 94}. Best is trial 49 with value: 0.7998212689901698.\n","[I 2025-03-05 11:34:05,513] Trial 54 finished with value: 0.7935656836461126 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 24, 'n_estimators': 86}. Best is trial 49 with value: 0.7998212689901698.\n","[I 2025-03-05 11:34:05,810] Trial 55 pruned. \n","[I 2025-03-05 11:34:06,047] Trial 56 pruned. \n","[I 2025-03-05 11:34:06,107] Trial 57 pruned. \n","[I 2025-03-05 11:34:06,366] Trial 58 pruned. \n","[I 2025-03-05 11:34:07,185] Trial 59 finished with value: 0.7908847184986595 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 22, 'n_estimators': 94}. Best is trial 49 with value: 0.7998212689901698.\n","[I 2025-03-05 11:34:07,952] Trial 60 finished with value: 0.8016085790884718 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 24, 'n_estimators': 72}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:08,288] Trial 61 pruned. \n","[I 2025-03-05 11:34:09,118] Trial 62 finished with value: 0.7873100983020554 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 19, 'n_estimators': 64}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:10,080] Trial 63 finished with value: 0.7899910634495084 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 23, 'n_estimators': 75}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:10,671] Trial 64 finished with value: 0.7908847184986595 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 18, 'n_estimators': 68}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:11,424] Trial 65 finished with value: 0.7971403038427166 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 28, 'n_estimators': 86}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:11,603] Trial 66 pruned. \n","[I 2025-03-05 11:34:12,312] Trial 67 finished with value: 0.7926720285969616 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 27, 'n_estimators': 81}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:12,565] Trial 68 pruned. \n","[I 2025-03-05 11:34:12,634] Trial 69 pruned. \n","[I 2025-03-05 11:34:12,848] Trial 70 pruned. \n","[I 2025-03-05 11:34:13,120] Trial 71 pruned. \n","[I 2025-03-05 11:34:13,387] Trial 72 pruned. \n","[I 2025-03-05 11:34:13,620] Trial 73 pruned. \n","[I 2025-03-05 11:34:14,411] Trial 74 finished with value: 0.7926720285969616 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 14, 'n_estimators': 93}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:15,118] Trial 75 finished with value: 0.7899910634495084 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 20, 'n_estimators': 82}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:15,179] Trial 76 pruned. \n","[I 2025-03-05 11:34:15,382] Trial 77 pruned. \n","[I 2025-03-05 11:34:15,575] Trial 78 pruned. \n","[I 2025-03-05 11:34:15,736] Trial 79 pruned. \n","[I 2025-03-05 11:34:15,800] Trial 80 pruned. \n","[I 2025-03-05 11:34:16,068] Trial 81 pruned. \n","[I 2025-03-05 11:34:16,815] Trial 82 finished with value: 0.7855227882037533 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 26, 'n_estimators': 86}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:17,539] Trial 83 finished with value: 0.7944593386952636 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 32, 'n_estimators': 83}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:18,247] Trial 84 finished with value: 0.7899910634495084 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 21, 'n_estimators': 79}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:18,509] Trial 85 pruned. \n","[I 2025-03-05 11:34:18,714] Trial 86 pruned. \n","[I 2025-03-05 11:34:19,397] Trial 87 finished with value: 0.7926720285969616 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 16, 'n_estimators': 77}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:19,588] Trial 88 pruned. \n","[I 2025-03-05 11:34:20,223] Trial 89 finished with value: 0.7998212689901698 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 28, 'n_estimators': 62}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:20,514] Trial 90 pruned. \n","[I 2025-03-05 11:34:21,249] Trial 91 finished with value: 0.7917783735478107 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 32, 'n_estimators': 57}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:21,562] Trial 92 pruned. \n","[I 2025-03-05 11:34:21,891] Trial 93 pruned. \n","[I 2025-03-05 11:34:22,196] Trial 94 pruned. \n","[I 2025-03-05 11:34:22,329] Trial 95 pruned. \n","[I 2025-03-05 11:34:22,551] Trial 96 pruned. \n","[I 2025-03-05 11:34:23,269] Trial 97 finished with value: 0.7882037533512064 and parameters: {'classifier': 'RandomForest', 'rf_max_depth': 29, 'n_estimators': 84}. Best is trial 60 with value: 0.8016085790884718.\n","[I 2025-03-05 11:34:23,326] Trial 98 pruned. \n","[I 2025-03-05 11:34:23,561] Trial 99 pruned. \n"]},{"name":"stdout","output_type":"stream","text":["Best parameters: {'classifier': 'RandomForest', 'rf_max_depth': 24, 'n_estimators': 72}\n"]}],"source":["import optuna\n","import sklearn.datasets\n","import sklearn.ensemble\n","import sklearn.model_selection\n","import sklearn.svm\n","import pandas as pd\n","\n","def objective(trial):\n","    classifier_name = trial.suggest_categorical(\"classifier\", [\"SVC\", \"RandomForest\"])\n","    if classifier_name == \"SVC\":\n","        svc_c = trial.suggest_float(\"svc_c\", 1e-10, 1e10, log=True)\n","        classifier_obj = sklearn.svm.SVC(C=svc_c, gamma=\"auto\")\n","    else:\n","        rf_max_depth = trial.suggest_int(\"rf_max_depth\", 2, 32, log=True)\n","        rf_n_estimators = trial.suggest_int(\"n_estimators\", 10, 100)\n","        classifier_obj = sklearn.ensemble.RandomForestClassifier(\n","            max_depth=rf_max_depth, n_estimators=rf_n_estimators\n","        )\n","\n","    scores = []\n","    cv = sklearn.model_selection.StratifiedKFold(n_splits=3, shuffle=True, random_state=42) #using StratifiedKfold\n","    for fold, (train_index, val_index) in enumerate(cv.split(X_train, y_train)):\n","        X_train_fold, X_val_fold = X_train.iloc[train_index], X_train.iloc[val_index]\n","        y_train_fold, y_val_fold = y_train.iloc[train_index].values.ravel(), y_train.iloc[val_index].values.ravel()\n","        classifier_obj.fit(X_train_fold, y_train_fold)\n","        score = classifier_obj.score(X_val_fold, y_val_fold)\n","        scores.append(score)\n","        trial.report(score, fold) # Accuracy of each iteration. Fold1 as eval, fold2 as eval and fold3 as eval.\n","        if trial.should_prune():\n","            raise optuna.exceptions.TrialPruned()\n","\n","    accuracy = sum(scores) / len(scores)\n","    return accuracy\n","\n","study = optuna.create_study(direction=\"maximize\", pruner=optuna.pruners.MedianPruner())\n","study.optimize(objective, n_trials=100)\n","\n","best_params = study.best_params\n","print(\"Best parameters:\", best_params)"]}],"metadata":{"colab":{"name":"","provenance":[{"file_id":"1ouiFECvK9EDL0ve43NRvKaTZNtg7Pw09","timestamp":1741370908686}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}